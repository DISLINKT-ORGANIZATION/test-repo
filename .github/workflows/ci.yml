name: CI Pipeline

on:
  pull_request:
    branches: [dev, main]
  push:
    branches: [dev, main]

jobs:
  ci:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci] ')"
    steps:
      - name: Checkout repo
        uses: actions/checkout@v1
        with:
          ref: main
          fetch-depth: '0'

      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: '11'

      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

#      - name: Run tests
#        run: mvn -B test

      - name: Build with Maven
        run: mvn -B package -DskipTests --file pom.xml

#      - name: Bump version and push tag
#        id: tag_version
#        uses: mathieudutour/github-tag-action@v5
#        with:
#          github_token: ${{ secrets.GITHUB_TOKEN }}

#      - name: Build Changelog
#        id: github_release
#        uses: mikepenz/release-changelog-builder-action@v3
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      - name: Create a GitHub release
#          uses: ncipollo/release-action@v1.9.0
#          with:
#            tag: ${{ steps.tag_version.outputs.new_tag }}
#            name: Release ${{ steps.tag_version.outputs.new_tag }}
#            body:
#              ${{ steps.github_release.outputs.changelog }}
#              ${{ steps.tag_version.outputs.changelog }}

#
#      - name: Print tag
#        run: echo ${{ steps.tag_version.outputs.new_tag }} ${{ steps.tag_version.outputs }} ${{ steps.tag_version }}
###################
      - name: Create a Github release
        id: release
        uses: rymndhng/release-on-push-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          bump_version_scheme: minor
          tag_prefix: v
          release_name: "Release <RELEASE_VERSION>"

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/data*
          asset_name: ${{ matrix.asset_name }}
          tag: ${{ github.ref }}



#
##      - name: Specify next version
##      - name: Upload artifact
#      - name: Release
#        uses: qcastel/github-actions-maven-release@master
#        env:
#          JAVA_HOME: /usr/lib/jvm/java-11-openjdk/
#        with:
#          release-branch-name: "main"
##          git-release-bot-name: "bot-idhub"
##          git-release-bot-email: "bot@idhub.io"
#          maven-args: "-Dmaven.javadoc.skip=true -DskipTests -DskipITs -Ddockerfile.skip -DdockerCompose.skip -Dmaven.deploy.skip=true"
#          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
