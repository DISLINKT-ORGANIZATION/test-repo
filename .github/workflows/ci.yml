name: CI Pipeline

on:
  pull_request:
    branches: [develop, main]
  push:
    branches: [develop, main]

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v1
        with:
          ref: main
          fetch-depth: '0'

      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: '11'

      - name: Cache Maven Packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

#      - name: Run Unit Tests
#        run: mvn -B test

      # TODO: run integration tests with docker-compose

#      - name: Cache SonarCloud Packages
#        uses: actions/cache@v1
#        with:
#          path: ~/.sonar/cache
#          key: ${{ runner.os }}-sonar
#          restore-keys: ${{ runner.os }}-sonar
#
#      - name: Analyze With SonarCloud
#        run: mvn -B verify sonar:sonar -Dsonar.projectKey=DISLINKT-ORGANIZATION_test-repo -Dsonar.organization=dislinkt-organization -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_TOKEN
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: Build with Maven
        run: mvn --batch-mode --update-snapshots package

      - name: Semantic Versioning
        id: versioning
        if: ${{ github.event_name == 'push' }}
        uses: paulhatch/semantic-version@v4.0.2
        with:
          tag_prefix: "v"
          major_pattern: "(MAJOR)"
          minor_pattern: "(MINOR)"
          format: "${major}.${minor}.${patch}"
          bump_each_commit: true

      - name: Upload Jar Artifact
        if: ${{ github.event_name == 'push' }}
        uses: actions/upload-artifact@v3
        with:
          name: build-${{ steps.versioning.outputs.version }}.jar
          path: target/*.jar

      - name: Set Up QEMU
        if: ${{ github.event_name == 'push' }}
        uses: docker/setup-qemu-action@v2

      - name: Set Up Docker Buildx
        if: ${{ github.event_name == 'push' }}
        uses: docker/setup-buildx-action@v2

      - name: Docker Login
        if: ${{ github.event_name == 'push' }}
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build And Push Docker Image
        id: docker_build
        if: ${{ github.event_name == 'push' }}
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/test:${{ steps.versioning.outputs.version }}
#          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/test:buildcache
#          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/test:buildcache,mode=max

      - name: Upload Docker Image As Artifact
        if: ${{ github.event_name == 'push' }}
        uses: ishworkh/docker-image-artifact-upload@v1
        with:
#          image: "${{ secrets.DOCKER_USERNAME }}/test:${{ steps.versioning.outputs.version }}"
          image: ${{ steps.docker_build.outputs.imageid }}












